[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "MEDS_transforms"
dynamic = ["version"]
authors = [
  { name="Matthew McDermott", email="mattmcdermott8@gmail.com" },
]
description = "MEDS ETL and transformation functions leveraging a sharding-based parallelism model & polars."
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
  "polars~=1.26", "pyarrow", "hydra-core", "numpy", "meds==0.3.3", "filelock",
]

[tool.setuptools_scm]

[project.optional-dependencies]
dev = ["pre-commit<4"]
tests = ["pytest", "pytest-cov", "rootutils", "hydra-joblib-launcher", "meds_testing_helpers>=0.2.1"]
local_parallelism = ["hydra-joblib-launcher"]
slurm_parallelism = ["hydra-submitit-launcher"]
docs = [
  "mkdocs==1.6.1", "mkdocs-material==9.6.7", "mkdocstrings[python,shell]==0.28.2", "mkdocs-gen-files==0.5.0",
  "mkdocs-literate-nav==0.6.1", "mkdocs-section-index==0.3.9", "mkdocs-git-authors-plugin==0.9.2",
  "mkdocs-git-revision-date-localized-plugin==1.3.0"
]

[project.scripts]
# MEDS_extract
MEDS_extract-split_and_shard_subjects = "MEDS_transforms.extract.split_and_shard_subjects:main"
MEDS_extract-shard_events = "MEDS_transforms.extract.shard_events:main"
MEDS_extract-convert_to_sharded_events = "MEDS_transforms.extract.convert_to_sharded_events:main"
MEDS_extract-merge_to_MEDS_cohort = "MEDS_transforms.extract.merge_to_MEDS_cohort:main"
MEDS_extract-extract_code_metadata = "MEDS_transforms.extract.extract_code_metadata:main"
MEDS_extract-finalize_MEDS_metadata = "MEDS_transforms.extract.finalize_MEDS_metadata:main"
MEDS_extract-finalize_MEDS_data = "MEDS_transforms.extract.finalize_MEDS_data:main"

# MEDS_transform
## General
MEDS_transform-aggregate_code_metadata = "MEDS_transforms.aggregate_code_metadata:main"
MEDS_transform-fit_vocabulary_indices = "MEDS_transforms.fit_vocabulary_indices:main"
MEDS_transform-reshard_to_split = "MEDS_transforms.reshard_to_split:main"
## Filters
MEDS_transform-filter_measurements = "MEDS_transforms.filters.filter_measurements:main"
MEDS_transform-filter_subjects = "MEDS_transforms.filters.filter_subjects:main"
## Transforms
MEDS_transform-reorder_measurements = "MEDS_transforms.transforms.reorder_measurements:main"
MEDS_transform-add_time_derived_measurements = "MEDS_transforms.transforms.add_time_derived_measurements:main"
MEDS_transform-extract_values = "MEDS_transforms.transforms.extract_values:main"
MEDS_transform-normalization = "MEDS_transforms.transforms.normalization:main"
MEDS_transform-occlude_outliers = "MEDS_transforms.transforms.occlude_outliers:main"

# Runner
MEDS_transform-runner = "MEDS_transforms.runner:main"

[project.urls]
Homepage = "https://github.com/mmcdermott/MEDS_transforms"
Issues = "https://github.com/mmcdermott/MEDS_transforms/issues"

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--doctest-modules",
  "--ignore=docs",
  "--doctest-glob=*.md",
]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "ELLIPSIS"]
